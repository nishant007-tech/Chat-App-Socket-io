{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from './types';\nimport { SERVER_URL } from '../config'; //async() is thunk function for delay\n\nexport const registerUser = dataToSubmit => async dispatch => {\n  let responseData = await axios.post(`${SERVER_URL}/register`, dataToSubmit);\n  return dispatch({\n    type: REGISTER_USER,\n    payload: responseData\n  });\n};\nexport const loginUser = dataToSubmit => async dispatch => {\n  const responseData = await axios.post(`${SERVER_URL}/login`, dataToSubmit, {\n    withCredentials: true\n  });\n  return dispatch({\n    type: LOGIN_USER,\n    payload: responseData\n  });\n};\nexport const logoutUser = () => async dispatch => {\n  const responseData = await axios.get(`${SERVER_URL}/logout`, {\n    withCredentials: true\n  });\n  return dispatch({\n    type: LOGOUT_USER,\n    payload: responseData\n  });\n};\nexport const authUser = () => async dispatch => {\n  let responseData = await axios.get(`${SERVER_URL}/authuser`, {\n    withCredentials: true\n  });\n  return dispatch({\n    type: AUTH_USER,\n    payload: responseData\n  });\n};\nexport const getAllUsers = () => async dispatch => {\n  let responseData = await axios.get(`${SERVER_URL}/getallusers`, {\n    withCredentials: true\n  });\n  return dispatch({\n    type: AUTH_USER,\n    payload: responseData\n  });\n}; // withCredentials sets to true let us send the cookies stored over the browser to the server (like in api: req.cookie(\"jwt\"))","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","SERVER_URL","registerUser","dataToSubmit","dispatch","responseData","post","type","payload","loginUser","withCredentials","logoutUser","get","authUser","getAllUsers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,QAKO,SALP;AAOA,SAASC,UAAT,QAA2B,WAA3B,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AAC9D,MAAIC,YAAY,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEL,UAAW,WAAzB,EAAqCE,YAArC,CAAzB;AACA,SAAOC,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAET,aADM;AAEZU,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CANM;AAOP,OAAO,MAAMI,SAAS,GAAIN,YAAD,IAAkB,MAAOC,QAAP,IAAoB;AAC3D,QAAMC,YAAY,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEL,UAAW,QAAzB,EAAkCE,YAAlC,EAAgD;AACvEO,IAAAA,eAAe,EAAE;AADsD,GAAhD,CAA3B;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAEV,UADM;AAEZW,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM;AASP,OAAO,MAAMM,UAAU,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAChD,QAAMC,YAAY,GAAG,MAAMT,KAAK,CAACgB,GAAN,CAAW,GAAEX,UAAW,SAAxB,EAAkC;AACzDS,IAAAA,eAAe,EAAE;AADwC,GAAlC,CAA3B;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAEP,WADM;AAEZQ,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM;AASP,OAAO,MAAMQ,QAAQ,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC9C,MAAIC,YAAY,GAAG,MAAMT,KAAK,CAACgB,GAAN,CAAW,GAAEX,UAAW,WAAxB,EAAoC;AACzDS,IAAAA,eAAe,EAAE;AADwC,GAApC,CAAzB;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAER,SADM;AAEZS,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM;AASP,OAAO,MAAMS,WAAW,GAAG,MAAM,MAAOV,QAAP,IAAoB;AACjD,MAAIC,YAAY,GAAG,MAAMT,KAAK,CAACgB,GAAN,CAAW,GAAEX,UAAW,cAAxB,EAAuC;AAC5DS,IAAAA,eAAe,EAAE;AAD2C,GAAvC,CAAzB;AAGA,SAAON,QAAQ,CAAC;AACZG,IAAAA,IAAI,EAAER,SADM;AAEZS,IAAAA,OAAO,EAAEH;AAFG,GAAD,CAAf;AAIH,CARM,C,CASP","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\n\nimport { SERVER_URL } from '../config';\n\n//async() is thunk function for delay\nexport const registerUser = (dataToSubmit) => async (dispatch) => {\n    let responseData = await axios.post(`${SERVER_URL}/register`, dataToSubmit)\n    return dispatch({\n        type: REGISTER_USER,\n        payload: responseData\n    })\n}\nexport const loginUser = (dataToSubmit) => async (dispatch) => {\n    const responseData = await axios.post(`${SERVER_URL}/login`, dataToSubmit, {\n        withCredentials: true,\n    });\n    return dispatch({\n        type: LOGIN_USER,\n        payload: responseData\n    })\n}\nexport const logoutUser = () => async (dispatch) => {\n    const responseData = await axios.get(`${SERVER_URL}/logout`, {\n        withCredentials: true,\n    })\n    return dispatch({\n        type: LOGOUT_USER,\n        payload: responseData\n    })\n}\nexport const authUser = () => async (dispatch) => {\n    let responseData = await axios.get(`${SERVER_URL}/authuser`, {\n        withCredentials: true,\n    })\n    return dispatch({\n        type: AUTH_USER,\n        payload: responseData\n    })\n}\nexport const getAllUsers = () => async (dispatch) => {\n    let responseData = await axios.get(`${SERVER_URL}/getallusers`, {\n        withCredentials: true,\n    })\n    return dispatch({\n        type: AUTH_USER,\n        payload: responseData\n    })\n}\n// withCredentials sets to true let us send the cookies stored over the browser to the server (like in api: req.cookie(\"jwt\"))"]},"metadata":{},"sourceType":"module"}