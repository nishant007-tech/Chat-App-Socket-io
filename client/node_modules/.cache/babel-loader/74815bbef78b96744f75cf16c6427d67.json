{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ChatBox from './chatBox';\nimport io from 'socket.io-client';\nimport { SERVER } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(props) {\n  _s();\n\n  let socket = io(SERVER);\n  useEffect(() => {\n    if (socket) {\n      socket.emit('updateOnlineUsers');\n    }\n\n    return () => {\n      if (socket) {\n        socket.removeAllListeners();\n        socket.close();\n        socket.off();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChatBox, {\n    props: props,\n    socket: socket\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/chat.js"],"names":["React","useEffect","ChatBox","io","SERVER","Chat","props","socket","emit","removeAllListeners","close","off"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,MAAIC,MAAM,GAAGJ,EAAE,CAACC,MAAD,CAAf;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACC,IAAP,CAAY,mBAAZ;AACH;;AACD,WAAO,MAAM;AACT,UAAID,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACE,kBAAP;AACAF,QAAAA,MAAM,CAACG,KAAP;AACAH,QAAAA,MAAM,CAACI,GAAP;AACH;AACJ,KAND;AAOH,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEL,KAAhB;AAAuB,IAAA,MAAM,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAlBQF,I;;KAAAA,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport ChatBox from './chatBox'\nimport io from 'socket.io-client';\nimport { SERVER } from './config';\nfunction Chat(props) {\n    let socket = io(SERVER);\n    useEffect(() => {\n        if (socket) {\n            socket.emit('updateOnlineUsers');\n        }\n        return () => {\n            if (socket) {\n                socket.removeAllListeners();\n                socket.close();\n                socket.off();\n            }\n        };\n    }, []);\n\n    return (\n        <ChatBox props={props} socket={socket} />\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}