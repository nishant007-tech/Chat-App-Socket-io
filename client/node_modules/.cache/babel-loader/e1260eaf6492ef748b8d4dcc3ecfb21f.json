{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/chatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { SERVER, SERVER_URL } from './config';\nimport UsersList from './usersList';\nimport axios from 'axios';\nimport Typist from 'react-typist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(SERVER);\n\nfunction ChatBox({\n  match\n}) {\n  _s();\n\n  const [msg, setmsg] = useState(\"\");\n  const [state, setstate] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const userId = useSelector(state => state.user_reducer.user);\n  const username = useSelector(state => state.user_reducer.username);\n\n  const readInput = e => {\n    setmsg(e.target.value);\n  };\n\n  if (match) {\n    var friendId = match.params.id;\n  }\n\n  const [foundUser, setFoundUser] = useState({});\n  const [foundMessages, setFoundMessages] = useState([]); // add User\n\n  useEffect(() => {\n    socket.emit(\"adduser\", userId, username);\n    socket.on(\"getusers\", users => {\n      setOnlineUsers([users]);\n    });\n  }, [userId, username]);\n  useEffect(() => {\n    try {\n      let isSubscribed = true;\n\n      const findUser = async () => {\n        if (friendId) {\n          const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n\n          if (returnedUser && isSubscribed) {\n            setFoundUser(returnedUser.data);\n          }\n        }\n      };\n\n      findUser();\n\n      const loadPrivateMessages = async () => {\n        if (foundUser._id) {\n          const foundMessages = await axios.get(`${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`);\n\n          if (foundMessages.data.length > 0 && isSubscribed) {\n            setFoundMessages(foundMessages.data); // scrollToBottom();\n          } // else {\n          //     setMoreMessagesExist(false);\n          // }\n\n        }\n      };\n\n      loadPrivateMessages();\n      return () => isSubscribed = false;\n    } catch (error) {\n      console.log(error);\n    }\n  }, [foundUser._id, friendId, userId]);\n  useEffect(() => {\n    if (socket) {\n      socket.emit('updateAndSendOnlineUsers');\n    }\n\n    return () => {\n      if (socket) {\n        socket.removeAllListeners();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      socket.emit(\"disconnectUser\", onlineUsers);\n    }, 1000);\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(msg);\n  };\n\n  if (userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContent\",\n        children: [/*#__PURE__*/_jsxDEV(UsersList, {\n          onlineUsers: onlineUsers,\n          foundUser: foundUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightChatContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightChatContent\",\n            children: foundMessages.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-user-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 50\n                  }, this), \" Nishant Rana\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"hello vikrant good morning!! \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-user-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 50\n                  }, this), \" \", username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  value: msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : friendId ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Lets Start Conversation with \\\"\", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [foundUser.name, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Typist, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typistContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chatHeadTxt\",\n                  children: \"Let's Chat \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \" Let's Talk Virtual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typist.Delay, {\n                  ms: 500\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chatHeadTxt\",\n                  children: \"It's An Online live Conversation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sendmsgForm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sendFormInner\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: friendId ? false : true,\n                  autoComplete: \"off\",\n                  onChange: readInput,\n                  name: \"inputMsg\",\n                  type: \"text\",\n                  placeholder: \"Write here....\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  name: \"inputMsg\",\n                  type: \"submit\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  } else {\n    //i used settimeout for not showing content immediately after re render...... during component re-render untill fetching userId this content might be visible between renders....!!\n    setTimeout(() => {\n      setstate(\"Session Expired Please LogIn Again!!!\");\n    }, 500);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 44\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ChatBox, \"ekVH+MbAO3bM4+WPdLpy8OWx2W4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/chatBox.js"],"names":["React","useState","useEffect","io","useSelector","SERVER","SERVER_URL","UsersList","axios","Typist","socket","ChatBox","match","msg","setmsg","state","setstate","onlineUsers","setOnlineUsers","userId","user_reducer","user","username","readInput","e","target","value","friendId","params","id","foundUser","setFoundUser","foundMessages","setFoundMessages","emit","on","users","isSubscribed","findUser","returnedUser","get","data","loadPrivateMessages","_id","length","error","console","log","removeAllListeners","setTimeout","submitHandler","preventDefault","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { SERVER, SERVER_URL } from './config';\nimport UsersList from './usersList'\nimport axios from 'axios'\nimport Typist from 'react-typist';\n\nconst socket = io(SERVER);\n\nfunction ChatBox({ match }) {\n    const [msg, setmsg] = useState(\"\");\n    const [state, setstate] = useState(\"\");\n    const [onlineUsers, setOnlineUsers] = useState([]);\n    const userId = useSelector(state => state.user_reducer.user);\n    const username = useSelector(state => state.user_reducer.username);\n    const readInput = (e) => {\n        setmsg(e.target.value);\n    }\n    if (match) {\n        var friendId = match.params.id;\n    }\n    const [foundUser, setFoundUser] = useState({});\n    const [foundMessages, setFoundMessages] = useState([]);\n\n    // add User\n    useEffect(() => {\n        socket.emit(\"adduser\", userId, username);\n        socket.on(\"getusers\", (users) => {\n            setOnlineUsers([users]);\n        })\n    }, [userId, username])\n\n    useEffect(() => {\n        try {\n            let isSubscribed = true;\n            const findUser = async () => {\n                if (friendId) {\n                    const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n                    if (returnedUser && isSubscribed) {\n                        setFoundUser(returnedUser.data);\n                    }\n                }\n            };\n            findUser();\n\n            const loadPrivateMessages = async () => {\n                if (foundUser._id) {\n\n                    const foundMessages = await axios.get(\n                        `${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`\n                    );\n                    if (foundMessages.data.length > 0 && isSubscribed) {\n                        setFoundMessages(foundMessages.data);\n                        // scrollToBottom();\n                    }// else {\n                    //     setMoreMessagesExist(false);\n                    // }\n                }\n            };\n            loadPrivateMessages();\n            return () => (isSubscribed = false);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }, [foundUser._id, friendId, userId]);\n\n\n    useEffect(() => {\n        if (socket) {\n            socket.emit('updateAndSendOnlineUsers');\n        }\n\n        return () => {\n            if (socket) {\n                socket.removeAllListeners();\n            }\n        };\n    }, []);\n    useEffect(() => {\n        setTimeout(() => {\n            socket.emit(\"disconnectUser\", onlineUsers);\n        }, 1000);\n    }, []);\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log(msg)\n\n    }\n    if (userId) {\n        return (\n            <div className=\"chatContainer\">\n                <div className=\"chatContent\">\n                    <UsersList onlineUsers={onlineUsers} foundUser={foundUser} />\n                    <div className=\"rightChatContainer\">\n                        <div className=\"rightChatContent\">\n                            {\n                                foundMessages.length !== 0 ?\n                                    <>\n                                        <div className=\"left\">\n                                            <h4> <i className=\"fa fa-user-circle\"></i> Nishant Rana</h4>\n                                            <p>hello vikrant good morning!! </p>\n                                        </div>\n                                        <div className=\"right\">\n\n                                            <h4> <i className=\"fa fa-user-circle\"></i> {username}</h4>\n                                            <p value={msg}></p>\n                                        </div>\n                                    </>\n                                    :\n                                    friendId ?\n                                        <h3>Lets Start Conversation with \"<b>{foundUser.name}\"</b></h3>\n                                        :\n                                        <Typist>\n                                            <div className=\"typistContainer\">\n                                                <p className='chatHeadTxt'>Let's Chat </p>\n                                                <p> Let's Talk Virtual</p>\n                                                <Typist.Delay ms={500} />\n                                                <p className='chatHeadTxt'>It's An Online live Conversation</p>\n                                            </div>\n                                        </Typist>\n                            }\n                        </div>\n                        <form onSubmit={submitHandler}>\n                            <div className=\"sendmsgForm\" >\n                                <div className=\"sendFormInner\" >\n                                    <input disabled={friendId ? false : true} autoComplete=\"off\" onChange={readInput} name=\"inputMsg\" type=\"text\" placeholder=\"Write here....\" />\n                                    <button name=\"inputMsg\" type=\"submit\"> <i className=\"fa fa-send\"></i></button>\n                                </div>\n                            </div>\n                        </form>\n                    </div >\n                </div >\n            </div >\n\n        )\n    } else {\n        //i used settimeout for not showing content immediately after re render...... during component re-render untill fetching userId this content might be visible between renders....!!\n        setTimeout(() => {\n            setstate(\"Session Expired Please LogIn Again!!!\");\n        }, 500);\n        return (\n            <div className=\"chatContainer\"><h2>{state}</h2> </div>\n        )\n    }\n}\n\nexport default ChatBox\n"]},"metadata":{},"sourceType":"module"}