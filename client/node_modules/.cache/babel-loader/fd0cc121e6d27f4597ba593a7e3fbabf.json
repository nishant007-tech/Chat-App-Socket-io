{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/myinput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { SERVER_URL } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Myinput({\n  socket,\n  userId,\n  username,\n  foundUser,\n  setFoundMessages,\n  foundMessages\n}) {\n  _s();\n\n  const [msg, setmsg] = useState(\"\");\n\n  const readInput = e => {\n    setmsg(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    if (msg.length > 0) {\n      try {\n        const message = {\n          author: username,\n          authorId: userId,\n          content: msg,\n          receiver: foundUser._id,\n          participants: [userId, foundUser._id]\n        };\n        const res = await axios.post(`${SERVER_URL}/messages`, message);\n        console.log(res.data);\n\n        if ([res.data].length > 0) {\n          socket.emit(\"privatemsg\", message);\n          setFoundMessages([...foundMessages, res.data]);\n        }\n\n        setmsg(\"\");\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      alert(\"Message Shouldn't be Empty!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendmsgForm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendFormInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: msg,\n          disabled: foundUser._id ? false : true,\n          autoComplete: \"off\",\n          onChange: readInput,\n          name: \"inputMsg\",\n          type: \"text\",\n          placeholder: \"Write here....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"inputMsg\",\n          type: \"submit\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Myinput, \"RnDTYkWoboh4mRWKRulqJKk0dkw=\");\n\n_c = Myinput;\nexport default Myinput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myinput\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/myinput.js"],"names":["React","useState","axios","SERVER_URL","Myinput","socket","userId","username","foundUser","setFoundMessages","foundMessages","msg","setmsg","readInput","e","target","value","submitHandler","preventDefault","length","message","author","authorId","content","receiver","_id","participants","res","post","console","log","data","emit","err","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA,gBAAvC;AAAyDC,EAAAA;AAAzD,CAAjB,EAA2F;AAAA;;AACvF,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMY,SAAS,GAAIC,CAAD,IAAO;AACrBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAGA,QAAMC,aAAa,GAAG,MAAOH,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,GAAG,CAACQ,MAAJ,GAAa,CAAjB,EAAoB;AAChB,UAAI;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,MAAM,EAAEd,QADI;AAEZe,UAAAA,QAAQ,EAAEhB,MAFE;AAGZiB,UAAAA,OAAO,EAAEZ,GAHG;AAIZa,UAAAA,QAAQ,EAAEhB,SAAS,CAACiB,GAJR;AAKZC,UAAAA,YAAY,EAAE,CAACpB,MAAD,EAASE,SAAS,CAACiB,GAAnB;AALF,SAAhB;AAOA,cAAME,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEzB,UAAW,WAAzB,EAAqCiB,OAArC,CAAlB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;;AACA,YAAI,CAACJ,GAAG,CAACI,IAAL,EAAWZ,MAAX,GAAoB,CAAxB,EAA2B;AACvBd,UAAAA,MAAM,CAAC2B,IAAP,CAAY,YAAZ,EAA0BZ,OAA1B;AACAX,UAAAA,gBAAgB,CAAC,CAAC,GAAGC,aAAJ,EAAmBiB,GAAG,CAACI,IAAvB,CAAD,CAAhB;AACH;;AACDnB,QAAAA,MAAM,CAAC,EAAD,CAAN;AAEH,OAhBD,CAgBE,OAAOqB,GAAP,EAAY;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH;AACJ,KApBD,MAoBO;AACHC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;AACJ,GAzBD;;AA2BA,sBACI;AAAM,IAAA,QAAQ,EAAEjB,aAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEN,GAAd;AAAmB,UAAA,QAAQ,EAAEH,SAAS,CAACiB,GAAV,GAAgB,KAAhB,GAAwB,IAArD;AAA2D,UAAA,YAAY,EAAC,KAAxE;AAA8E,UAAA,QAAQ,EAAEZ,SAAxF;AAAmG,UAAA,IAAI,EAAC,UAAxG;AAAmH,UAAA,IAAI,EAAC,MAAxH;AAA+H,UAAA,WAAW,EAAC;AAA3I;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAA,uCAAuC;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA1CQT,O;;KAAAA,O;AA4CT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { SERVER_URL } from './config';\nfunction Myinput({ socket, userId, username, foundUser, setFoundMessages, foundMessages }) {\n    const [msg, setmsg] = useState(\"\");\n    const readInput = (e) => {\n        setmsg(e.target.value);\n    }\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        if (msg.length > 0) {\n            try {\n                const message = {\n                    author: username,\n                    authorId: userId,\n                    content: msg,\n                    receiver: foundUser._id,\n                    participants: [userId, foundUser._id],\n                }\n                const res = await axios.post(`${SERVER_URL}/messages`, message);\n                console.log(res.data);\n                if ([res.data].length > 0) {\n                    socket.emit(\"privatemsg\", message);\n                    setFoundMessages([...foundMessages, res.data]);\n                }\n                setmsg(\"\");\n\n            } catch (err) {\n                console.log(err);\n            }\n        } else {\n            alert(\"Message Shouldn't be Empty!\")\n        }\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"sendmsgForm\" >\n                <div className=\"sendFormInner\" >\n                    <input value={msg} disabled={foundUser._id ? false : true} autoComplete=\"off\" onChange={readInput} name=\"inputMsg\" type=\"text\" placeholder=\"Write here....\" />\n                    <button name=\"inputMsg\" type=\"submit\"> <i className=\"fa fa-send\"></i></button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Myinput\n"]},"metadata":{},"sourceType":"module"}