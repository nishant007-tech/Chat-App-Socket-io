{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/myinput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Myinput({\n  socket,\n  userId,\n  username,\n  friendId,\n  foundUser,\n  setOnlineUsers,\n  setNewestSocketPrivateMessage\n}) {\n  _s();\n\n  const [msg, setmsg] = useState(\"\");\n\n  const readInput = e => {\n    setmsg(e.target.value);\n  };\n\n  useEffect(() => {\n    socket.on(\"getusers\", users => {\n      setOnlineUsers([users]);\n    });\n  }, [socket, setOnlineUsers]);\n  useEffect(() => {\n    socket.on('privatemessage', pvtMsg => {\n      if (pvtMsg.authorId === foundUser._id || pvtMsg.authorId === userId) {\n        setNewestSocketPrivateMessage(pvtMsg);\n      }\n    });\n  }, [socket, foundUser._id, userId, setNewestSocketPrivateMessage]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (msg.length > 0) {\n      socket.emit(\"privatemsg\", {\n        content: msg,\n        username: username,\n        userId: userId,\n        receiver: friendId\n      });\n      socket.emit(\"adduser\", userId, username);\n    } else {\n      alert(\"Message Shouldn't be Empty!\");\n    }\n\n    setmsg(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendmsgForm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendFormInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: msg,\n          disabled: friendId ? false : true,\n          autoComplete: \"off\",\n          onChange: readInput,\n          name: \"inputMsg\",\n          type: \"text\",\n          placeholder: \"Write here....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"inputMsg\",\n          type: \"submit\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Myinput, \"EXVxNW1yU+Efz/Ml3+Y7CzMTsPQ=\");\n\n_c = Myinput;\nexport default Myinput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myinput\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/myinput.js"],"names":["React","useEffect","useState","Myinput","socket","userId","username","friendId","foundUser","setOnlineUsers","setNewestSocketPrivateMessage","msg","setmsg","readInput","e","target","value","on","users","pvtMsg","authorId","_id","submitHandler","preventDefault","length","emit","content","receiver","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA,SAAtC;AAAiDC,EAAAA,cAAjD;AAAiEC,EAAAA;AAAjE,CAAjB,EAAmH;AAAA;;AAC/G,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMW,SAAS,GAAIC,CAAD,IAAO;AACrBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACa,EAAP,CAAU,UAAV,EAAuBC,KAAD,IAAW;AAC7BT,MAAAA,cAAc,CAAC,CAACS,KAAD,CAAD,CAAd;AACH,KAFD;AAGH,GAJQ,EAIN,CAACd,MAAD,EAASK,cAAT,CAJM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACa,EAAP,CAAU,gBAAV,EAA6BE,MAAD,IAAY;AACpC,UAAIA,MAAM,CAACC,QAAP,KAAoBZ,SAAS,CAACa,GAA9B,IAAqCF,MAAM,CAACC,QAAP,KAAoBf,MAA7D,EAAqE;AACjEK,QAAAA,6BAA6B,CAACS,MAAD,CAA7B;AACH;AACJ,KAJD;AAKH,GANQ,EAMN,CAACf,MAAD,EAASI,SAAS,CAACa,GAAnB,EAAwBhB,MAAxB,EAAgCK,6BAAhC,CANM,CAAT;;AAOA,QAAMY,aAAa,GAAIR,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACS,cAAF;;AACA,QAAIZ,GAAG,CAACa,MAAJ,GAAa,CAAjB,EAAoB;AAChBpB,MAAAA,MAAM,CAACqB,IAAP,CAAY,YAAZ,EAA0B;AACtBC,QAAAA,OAAO,EAAEf,GADa;AAEtBL,QAAAA,QAAQ,EAAEA,QAFY;AAGtBD,QAAAA,MAAM,EAAEA,MAHc;AAItBsB,QAAAA,QAAQ,EAAEpB;AAJY,OAA1B;AAMAH,MAAAA,MAAM,CAACqB,IAAP,CAAY,SAAZ,EAAuBpB,MAAvB,EAA+BC,QAA/B;AACH,KARD,MAQO;AACHsB,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;;AACDhB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACH,GAdD;;AAgBA,sBACI;AAAM,IAAA,QAAQ,EAAEU,aAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEX,GAAd;AAAmB,UAAA,QAAQ,EAAEJ,QAAQ,GAAG,KAAH,GAAW,IAAhD;AAAsD,UAAA,YAAY,EAAC,KAAnE;AAAyE,UAAA,QAAQ,EAAEM,SAAnF;AAA8F,UAAA,IAAI,EAAC,UAAnG;AAA8G,UAAA,IAAI,EAAC,MAAnH;AAA0H,UAAA,WAAW,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAA,uCAAuC;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA7CQV,O;;KAAAA,O;AA+CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction Myinput({ socket, userId, username, friendId, foundUser, setOnlineUsers, setNewestSocketPrivateMessage }) {\n    const [msg, setmsg] = useState(\"\");\n\n    const readInput = (e) => {\n        setmsg(e.target.value);\n    }\n\n    useEffect(() => {\n        socket.on(\"getusers\", (users) => {\n            setOnlineUsers([users]);\n        });\n    }, [socket, setOnlineUsers])\n    useEffect(() => {\n        socket.on('privatemessage', (pvtMsg) => {\n            if (pvtMsg.authorId === foundUser._id || pvtMsg.authorId === userId) {\n                setNewestSocketPrivateMessage(pvtMsg);\n            }\n        });\n    }, [socket, foundUser._id, userId, setNewestSocketPrivateMessage]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (msg.length > 0) {\n            socket.emit(\"privatemsg\", {\n                content: msg,\n                username: username,\n                userId: userId,\n                receiver: friendId\n            });\n            socket.emit(\"adduser\", userId, username);\n        } else {\n            alert(\"Message Shouldn't be Empty!\")\n        }\n        setmsg(\"\");\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"sendmsgForm\" >\n                <div className=\"sendFormInner\" >\n                    <input value={msg} disabled={friendId ? false : true} autoComplete=\"off\" onChange={readInput} name=\"inputMsg\" type=\"text\" placeholder=\"Write here....\" />\n                    <button name=\"inputMsg\" type=\"submit\"> <i className=\"fa fa-send\"></i></button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Myinput\n"]},"metadata":{},"sourceType":"module"}