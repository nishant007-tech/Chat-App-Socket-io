{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllMessages } from './actions/user_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersList({\n  foundUser,\n  onlineUsers\n}) {\n  _s();\n\n  let userID = useSelector(state => state.user_reducer.user);\n  const dispatch = useDispatch();\n  let users = [{\n    userId: \" \",\n    username: \" \"\n  }];\n  const username = useSelector(state => state.user_reducer.username);\n  const [onlineFriends, setonlineFriends] = useState([]);\n  useEffect(() => {\n    async function func() {\n      let response = await dispatch(getAllMessages()); // let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n      //     if (item.receiver === userID) {\n      //         return ({ author: `${item.author}`, authorId: `${item.authorId}` });\n      //     } else {\n      //         return null;\n      //     }\n      // }))]\n\n      let unique = [response.payload.data.messages].reduce((newListOfTags, current) => {\n        if (newListOfTags.some(x => x.receiver !== userID)) {\n          newListOfTags.push(current);\n        }\n\n        return newListOfTags;\n      }, []); // users = unique.map((item, index, arr) => {\n      //     if (item !== null && index % 2 !== 0) {\n      //         return [users[0].userId = arr[index + 1], users[0].username = item]\n      //     }\n      // });\n\n      console.log(unique);\n    }\n\n    func();\n  }, [dispatch, userID]);\n  useEffect(() => {\n    if (onlineUsers.length > 0) {\n      let bool = onlineUsers[0].some(elem => elem.userId === foundUser._id);\n\n      if (!bool) {\n        onlineUsers[0].push({\n          \"userId\": foundUser._id,\n          \"username\": foundUser.name\n        });\n        setonlineFriends([...onlineUsers[0]]);\n      }\n    }\n  }, [onlineUsers, foundUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leftUsersContainer\",\n    children: onlineUsers.length > 0 && onlineFriends ? onlineUsers[0].map((elem, index) => elem.userId && elem.userId !== userID ? /*#__PURE__*/_jsxDEV(Link, {\n      to: `/chat/${elem.userId} `,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: elem.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user-circle-o userIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: elem.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: elem.socketId ? \"fa fa-circle active\" : \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }, this) : elem.userId && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/chat`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftUserContent \",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltiptext\",\n            children: \"Talking To Oneself Not Allowed!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user-circle-o userIcon \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [username, \"(Me)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-circle active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }, this)) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersList, \"Ns5u9hHXrWoQAo+vWiKhZ1xDut8=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/usersList.js"],"names":["React","useEffect","useState","useSelector","Link","useDispatch","getAllMessages","UsersList","foundUser","onlineUsers","userID","state","user_reducer","user","dispatch","users","userId","username","onlineFriends","setonlineFriends","func","response","unique","payload","data","messages","reduce","newListOfTags","current","some","x","receiver","push","console","log","length","bool","elem","_id","name","map","index","socketId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { getAllMessages } from './actions/user_actions';\n\nfunction UsersList({ foundUser, onlineUsers }) {\n    let userID = useSelector(state => state.user_reducer.user);\n    const dispatch = useDispatch();\n    let users = [{\n        userId: \" \",\n        username: \" \"\n    }];\n    const username = useSelector(state => state.user_reducer.username);\n    const [onlineFriends, setonlineFriends] = useState([]);\n    useEffect(() => {\n        async function func() {\n            let response = await dispatch(getAllMessages());\n            // let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n            //     if (item.receiver === userID) {\n            //         return ({ author: `${item.author}`, authorId: `${item.authorId}` });\n            //     } else {\n            //         return null;\n            //     }\n            // }))]\n            let unique = [response.payload.data.messages].reduce((newListOfTags, current) => {\n                if (newListOfTags.some(x => x.receiver !== userID)) {\n                    newListOfTags.push(current);\n                }\n                return newListOfTags;\n            }, [])\n            // users = unique.map((item, index, arr) => {\n            //     if (item !== null && index % 2 !== 0) {\n            //         return [users[0].userId = arr[index + 1], users[0].username = item]\n            //     }\n            // });\n            console.log(unique)\n        }\n        func();\n    }, [dispatch, userID])\n\n    useEffect(() => {\n        if (onlineUsers.length > 0) {\n            let bool = onlineUsers[0].some((elem) => (\n                elem.userId === foundUser._id\n            ))\n            if (!bool) {\n                onlineUsers[0].push({ \"userId\": foundUser._id, \"username\": foundUser.name })\n                setonlineFriends([...onlineUsers[0]]);\n            }\n        }\n    }, [onlineUsers, foundUser]);\n\n\n    return (\n        <div className=\"leftUsersContainer\">\n            {\n                onlineUsers.length > 0 && onlineFriends ?\n                    onlineUsers[0].map((elem, index) => (\n                        elem.userId && elem.userId !== userID ?\n                            <Link key={index} to={`/chat/${elem.userId} `}>\n                                <div className={elem.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\"}>\n                                    <span>\n                                        <i className=\"fa fa-user-circle-o userIcon\"></i>\n                                        <h3>{elem.username}</h3>\n                                    </span>\n                                    <i className={elem.socketId ? \"fa fa-circle active\" : \" \"}></i>\n                                </div>\n                            </Link>\n                            :\n\n                            elem.userId && (\n                                <Link key={index} to={`/chat`}>\n                                    <div className=\"leftUserContent \">\n                                        <span >\n                                            <span className=\"tooltiptext\">Talking To Oneself Not Allowed!!</span>\n                                            <i className=\"fa fa-user-circle-o userIcon \"></i>\n                                            <h3>{username}(Me)</h3>\n                                        </span>\n                                        <i className=\"fa fa-circle active\"></i>\n                                    </div>\n                                </Link>\n                            ))\n                    )\n                    :\n                    \"\"\n            }\n            {\n                // users.length > 0 ?\n                //     users.map((item, index, arr) => (\n                //         item !== null ?\n                //             <Link key={index} to={`/chat/${elem.userId} `}>\n                //                 <div className={elem.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\"}>\n                //                     <span>\n                //                         <i className=\"fa fa-user-circle-o userIcon\"></i>\n                //                         <h3>{elem.username}</h3>\n                //                     </span>\n                //                     <i className={elem.socketId ? \"fa fa-circle active\" : \" \"}></i>\n                //                 </div>\n                //             </Link>\n                //             :\n                //             \"\"\n                //     ))\n                //     :\n                //     \"\"\n            }\n        </div >\n    )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}