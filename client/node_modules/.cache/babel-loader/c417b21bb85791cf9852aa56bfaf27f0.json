{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllMessages } from './actions/user_actions';\nimport MessageTwoToneIcon from '@material-ui/icons/MessageTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport PermIdentityTwoToneIcon from '@material-ui/icons/PermIdentityTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersList({\n  foundUser,\n  onlineUsers\n}) {\n  _s();\n\n  let userID = useSelector(state => state.user_reducer.user);\n  const dispatch = useDispatch();\n  const [users, setusers] = useState([]);\n  let [conversations, setconversations] = useState([]);\n  const username = useSelector(state => state.user_reducer.username);\n  const msgread = useSelector(state => state.chat_reducer.msgRead);\n  console.log(msgread);\n\n  if ((msgread === null || msgread === void 0 ? void 0 : msgread.read) === false && conversations.length <= 0 || (msgread === null || msgread === void 0 ? void 0 : msgread.read) === false && conversations.some(item => item.userId !== msgread.authorId)) {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    async function func() {\n      let response = await dispatch(getAllMessages());\n      let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n        if (item.receiver === userID) {\n          return item.author + \"|\" + item.authorId;\n        }\n\n        if (item.authorId === userID) {\n          return item.receiverName + \"|\" + item.receiver;\n        } else {\n          return null;\n        }\n      }))];\n      setusers(unique.map(item => item !== null && item.split(\"|\")));\n    }\n\n    func();\n  }, [dispatch, userID]);\n  useEffect(() => {\n    if (users.length > 0) {\n      let data = [];\n\n      for (let i = 0; i < users.length; i++) {\n        var value = users[i];\n\n        for (let j = 0; j < value.length - 1; j++) {\n          if (value !== false && value !== undefined) {\n            data.push({\n              \"userId\": value[j + 1],\n              \"username\": value[j]\n            });\n          }\n        }\n      }\n\n      if (data.length > 0) {\n        let bool = data.some(item => item.userId === foundUser._id);\n\n        if (!bool) {\n          setconversations(data);\n          setconversations(prev => [...prev, {\n            \"userId\": foundUser._id,\n            \"username\": foundUser.name\n          }]);\n        } else {\n          setconversations(data);\n        }\n      }\n    }\n  }, [foundUser, users, userID]);\n\n  const handleReadMsg = userId => {\n    if ((msgread === null || msgread === void 0 ? void 0 : msgread.authorId) === userId) {\n      msgread.authorId = null;\n      msgread.read = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leftUsersContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"h3ForOnline\",\n      children: \"Online \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onlineUsers\",\n      children: onlineUsers.length > 0 ? onlineUsers[0].map((elem, index) => elem.userId && elem.userId !== userID ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat/${elem.userId} `,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: elem.userId === foundUser._id ? \"leftUserContent userIsActive \" : \"leftUserContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(PermIdentityTwoToneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: elem.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: elem.socketId ? \"fa fa-circle active\" : \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }, this) : elem.userId && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftUserContent \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltiptext\",\n              children: \"Talking To Oneself Not Allowed!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(PermIdentityTwoToneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [username, \"(Me)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-circle active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"h3\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflowY\",\n        children: conversations.length > 0 ? conversations.map((item, index) => item.userId !== undefined && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/chat/${item.userId} `,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleReadMsg(item.userId),\n            className: item.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(PermIdentityTwoToneIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 45\n            }, this), (msgread === null || msgread === void 0 ? void 0 : msgread.authorId) === item.userId ? /*#__PURE__*/_jsxDEV(NotificationsActiveTwoToneIcon, {\n              color: \"action\",\n              className: \"notiIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 53\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 41\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ifNoMsg\",\n          children: [/*#__PURE__*/_jsxDEV(MessageTwoToneIcon, {\n            color: \"action\",\n            className: \"ifNoConvo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" No Message Yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Start The Conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersList, \"5ERVZE6OdNynxDJwk3+t2vsgqJE=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/usersList.js"],"names":["React","useEffect","useState","useSelector","Link","useDispatch","getAllMessages","MessageTwoToneIcon","NotificationsActiveTwoToneIcon","PermIdentityTwoToneIcon","UsersList","foundUser","onlineUsers","userID","state","user_reducer","user","dispatch","users","setusers","conversations","setconversations","username","msgread","chat_reducer","msgRead","console","log","read","length","some","item","userId","authorId","window","location","reload","func","response","unique","Set","payload","data","messages","flatMap","receiver","author","receiverName","map","split","i","value","j","undefined","push","bool","_id","prev","name","handleReadMsg","elem","index","socketId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { getAllMessages } from './actions/user_actions';\nimport MessageTwoToneIcon from '@material-ui/icons/MessageTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport PermIdentityTwoToneIcon from '@material-ui/icons/PermIdentityTwoTone';\n\nfunction UsersList({ foundUser, onlineUsers }) {\n    let userID = useSelector(state => state.user_reducer.user);\n    const dispatch = useDispatch();\n    const [users, setusers] = useState([]);\n    let [conversations, setconversations] = useState([]);\n    const username = useSelector(state => state.user_reducer.username);\n    const msgread = useSelector(state => state.chat_reducer.msgRead);\n\n    console.log(msgread);\n    if ((msgread?.read === false && conversations.length <= 0) || (msgread?.read === false && conversations.some((item) => item.userId !== msgread.authorId))) {\n        window.location.reload();\n    }\n    useEffect(() => {\n        async function func() {\n            let response = await dispatch(getAllMessages());\n            let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n                if (item.receiver === userID) {\n                    return (item.author + \"|\" + item.authorId);\n                } if (item.authorId === userID) {\n                    return (item.receiverName + \"|\" + item.receiver);\n                } else {\n                    return null\n                }\n            }))];\n            setusers(unique.map(item => item !== null && item.split(\"|\")));\n        }\n        func();\n\n    }, [dispatch, userID])\n    useEffect(() => {\n        if (users.length > 0) {\n            let data = [];\n            for (let i = 0; i < users.length; i++) {\n                var value = users[i];\n                for (let j = 0; j < value.length - 1; j++) {\n                    if (value !== false && value !== undefined) {\n                        data.push({ \"userId\": value[j + 1], \"username\": value[j] })\n                    }\n                }\n            }\n            if (data.length > 0) {\n                let bool = data.some(item => (\n                    item.userId === foundUser._id\n                ))\n                if (!bool) {\n                    setconversations(data);\n                    setconversations(prev => [...prev, { \"userId\": foundUser._id, \"username\": foundUser.name }]);\n                } else {\n                    setconversations(data);\n                }\n            }\n        }\n    }, [foundUser, users, userID]);\n\n    const handleReadMsg = (userId) => {\n        if (msgread?.authorId === userId) {\n            msgread.authorId = null;\n            msgread.read = true;\n        }\n    }\n\n    return (\n        <div className=\"leftUsersContainer\">\n            <h3 id=\"h3ForOnline\">Online </h3>\n            <div className=\"onlineUsers\">\n                {\n                    onlineUsers.length > 0 ?\n                        onlineUsers[0].map((elem, index) => (\n                            elem.userId && elem.userId !== userID ?\n                                <Link key={index} to={`/chat/${elem.userId} `}>\n                                    <div className={elem.userId === foundUser._id ? \"leftUserContent userIsActive \" : \"leftUserContent\"}>\n                                        <span>\n                                            <PermIdentityTwoToneIcon />\n                                            <h3>{elem.username}</h3>\n                                        </span>\n                                        <i className={elem.socketId ? \"fa fa-circle active\" : \" \"}></i>\n                                    </div>\n                                </Link>\n                                :\n\n                                elem.userId && (\n                                    <Link key={index} to={`/chat`}>\n                                        <div className=\"leftUserContent \">\n                                            <span >\n                                                <span className=\"tooltiptext\">Talking To Oneself Not Allowed!!</span>\n                                                <PermIdentityTwoToneIcon />\n                                                <h3>{username}(Me)</h3>\n                                            </span>\n                                            <i className=\"fa fa-circle active\"></i>\n                                        </div>\n                                    </Link>\n                                ))\n                        )\n                        :\n                        \"\"\n                }\n            </div>\n            <div>\n                <h3 id=\"h3\">Chats</h3>\n                <div className=\"overflowY\">\n                    {\n                        conversations.length > 0 ?\n                            conversations.map((item, index) => (\n                                item.userId !== undefined && (\n                                    <Link key={index} to={`/chat/${item.userId} `}>\n                                        <div onClick={() => handleReadMsg(item.userId)} className={item.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\"}>\n                                            <span>\n                                                <PermIdentityTwoToneIcon />\n                                                <h3>{item.username}</h3>\n                                            </span>\n                                            {\n                                                msgread?.authorId === item.userId ?\n                                                    <NotificationsActiveTwoToneIcon color=\"action\" className=\"notiIcon\" />\n                                                    :\n                                                    \"\"\n                                            }\n                                        </div>\n                                    </Link>)\n                            ))\n                            :\n                            <div className=\"ifNoMsg\">\n                                <MessageTwoToneIcon color=\"action\" className=\"ifNoConvo\" />\n                                <p> No Message Yet!</p>\n                                <i>Start The Conversation!</i>\n                            </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}