{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/showMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Typist from 'react-typist';\nimport { format } from 'timeago.js';\nimport axios from 'axios';\nimport { SERVER_URL } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowMessages({\n  foundMessages,\n  userId,\n  friendId,\n  foundUser\n}) {\n  _s();\n\n  const scrollRef = useRef();\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [foundMessages]);\n  useEffect(() => {\n    try {\n      let isSubscribed = true;\n\n      const findUser = async () => {\n        if (friendId) {\n          const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n\n          if (returnedUser && isSubscribed) {\n            setFoundUser(returnedUser.data);\n          }\n        }\n      };\n\n      findUser();\n\n      const loadPrivateMessages = async () => {\n        if (foundUser._id) {\n          const foundMessages = await axios.get(`${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`);\n\n          if (foundMessages.data.length > 0 && isSubscribed) {\n            setFoundMessages(foundMessages.data);\n          }\n        }\n      };\n\n      loadPrivateMessages();\n      return () => isSubscribed = false;\n    } catch (error) {\n      console.log(error);\n    }\n  }, [foundUser._id, friendId, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rightChatContent\",\n    children: foundMessages.length !== 0 ? foundMessages.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollRef,\n      className: data.authorId === userId ? \"right\" : `left `,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 34\n        }, this), \" \", data.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"time\",\n        children: format(data.createdAt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)) : friendId ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Lets Start Conversation with \\\"\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [foundUser.name, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Typist, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typistContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chatHeadTxt\",\n          children: \"Let's Chat \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Let's Talk Virtual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Typist.Delay, {\n          ms: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chatHeadTxt\",\n          children: \"It's An Online live Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowMessages, \"e+lJMFZUq6qrKjeXY86tefRPsYU=\");\n\n_c = ShowMessages;\nexport default ShowMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMessages\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/showMessages.js"],"names":["React","useEffect","useRef","Typist","format","axios","SERVER_URL","ShowMessages","foundMessages","userId","friendId","foundUser","scrollRef","current","scrollIntoView","behavior","isSubscribed","findUser","returnedUser","get","setFoundUser","data","loadPrivateMessages","_id","length","setFoundMessages","error","console","log","map","index","authorId","author","content","createdAt","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport Typist from 'react-typist';\nimport { format } from 'timeago.js';\nimport axios from 'axios'\nimport { SERVER_URL } from './config';\n\nfunction ShowMessages({ foundMessages, userId, friendId, foundUser }) {\n    const scrollRef = useRef();\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, [foundMessages]);\n\n    useEffect(() => {\n        try {\n            let isSubscribed = true;\n            const findUser = async () => {\n                if (friendId) {\n                    const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n                    if (returnedUser && isSubscribed) {\n                        setFoundUser(returnedUser.data);\n                    }\n                }\n            };\n            findUser();\n\n            const loadPrivateMessages = async () => {\n                if (foundUser._id) {\n                    const foundMessages = await axios.get(\n                        `${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`\n                    );\n                    if (foundMessages.data.length > 0 && isSubscribed) {\n                        setFoundMessages(foundMessages.data);\n                    }\n                }\n            };\n            loadPrivateMessages();\n            return () => (isSubscribed = false);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }, [foundUser._id, friendId, userId]);\n    return (\n        <div className=\"rightChatContent\" >\n            {\n                foundMessages.length !== 0 ?\n                    foundMessages.map((data, index) => (\n                        <div ref={scrollRef} key={index} className={data.authorId === userId ? \"right\" : `left `}>\n                            <h6> <i className=\"fa fa-user-circle\"></i> {data.author}</h6>\n                            <p>{data.content}</p>\n                            <i className=\"time\">{format(data.createdAt)}</i>\n                        </div>\n                    ))\n                    :\n                    friendId ?\n                        <h3>Lets Start Conversation with \"<b>{foundUser.name}\"</b></h3>\n                        :\n                        <Typist >\n                            <div className=\"typistContainer\">\n                                <p className='chatHeadTxt'>Let's Chat </p>\n                                <p> Let's Talk Virtual</p>\n                                <Typist.Delay ms={500} />\n                                <p className='chatHeadTxt'>It's An Online live Conversation</p>\n                            </div>\n                        </Typist>\n            }\n        </div>\n    )\n}\n\nexport default ShowMessages\n"]},"metadata":{},"sourceType":"module"}