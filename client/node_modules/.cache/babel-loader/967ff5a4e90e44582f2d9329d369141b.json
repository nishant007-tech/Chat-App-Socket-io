{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/chatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { SERVER, SERVER_URL } from './config';\nimport UsersList from './usersList';\nimport axios from 'axios';\nimport Typist from 'react-typist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(SERVER);\n\nfunction ChatBox(props) {\n  _s();\n\n  const [msg, setmsg] = useState(\"\");\n  const [state, setstate] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const userId = useSelector(state => state.user_reducer.user);\n  const username = useSelector(state => state.user_reducer.username);\n  console.log(userId);\n\n  const readInput = e => {\n    setmsg(e.target.value);\n  };\n\n  if (props.props) {\n    var friendId = props.props.match.params.id;\n  } else {\n    friendId = props.match.params.id;\n  }\n\n  const [foundUser, setFoundUser] = useState({});\n  const [foundMessages, setFoundMessages] = useState([]); // add User\n\n  useEffect(() => {\n    socket.emit(\"adduser\", userId, username);\n    socket.on(\"getusers\", users => {\n      setOnlineUsers([users]);\n    });\n  }, [userId, username]);\n  useEffect(() => {\n    try {\n      let isSubscribed = true;\n      setTimeout(() => {\n        const findUser = async () => {\n          if (friendId) {\n            const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n\n            if (returnedUser && isSubscribed) {\n              setFoundUser(returnedUser.data);\n            }\n          }\n        };\n\n        findUser();\n\n        const loadPrivateMessages = async () => {\n          if (foundUser._id) {\n            const foundMessages = await axios.get(`${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`);\n\n            if (foundMessages.data.length > 0 && isSubscribed) {\n              setFoundMessages(foundMessages.data); // scrollToBottom();\n            } // else {\n            //     setMoreMessagesExist(false);\n            // }\n\n          }\n        };\n\n        loadPrivateMessages();\n        return () => isSubscribed = false;\n      }, 100);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [foundUser._id, friendId, userId]);\n  useEffect(() => {\n    setTimeout(() => {\n      if (socket) {\n        socket.emit(\"updateAndSendOnlineUsers\");\n      }\n\n      return () => {\n        socket.removeAllListeners();\n        socket.emit('disconnectuser', socket);\n      };\n    }, 200);\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(msg);\n  };\n\n  if (userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContent\",\n        children: [/*#__PURE__*/_jsxDEV(UsersList, {\n          onlineUsers: onlineUsers,\n          foundUser: foundUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightChatContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightChatContent\",\n            children: foundMessages.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-user-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 50\n                  }, this), \" Nishant Rana\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"hello vikrant good morning!! \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-user-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 50\n                  }, this), \" \", username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  value: msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : friendId ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Lets Start Conversation with \\\"\", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [foundUser.name, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Typist, {\n              cursor: {\n                hideWhenDone: true\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typistContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chatHeadTxt\",\n                  children: \"Let's Chat \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \" Let's Talk Virtual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chatHeadTxt\",\n                  children: \"It's An Online live Conversation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typist.Delay, {\n                  ms: 1000\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sendmsgForm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sendFormInner\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: friendId ? false : true,\n                  autoComplete: \"off\",\n                  onChange: readInput,\n                  name: \"inputMsg\",\n                  type: \"text\",\n                  placeholder: \"Write here....\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  name: \"inputMsg\",\n                  type: \"submit\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  } else {\n    //i used settimeout for not showing content immediately after re render...... during component re-render untill fetching userId this content might be visible between renders....!!\n    setTimeout(() => {\n      setstate(\"Session Expired Please LogIn Again!!!\");\n    }, 500);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 44\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(ChatBox, \"uKgUX7XhK1bPoTRP3jP6Jo3AEhY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/chatBox.js"],"names":["React","useState","useEffect","io","useSelector","SERVER","SERVER_URL","UsersList","axios","Typist","socket","ChatBox","props","msg","setmsg","state","setstate","onlineUsers","setOnlineUsers","userId","user_reducer","user","username","console","log","readInput","e","target","value","friendId","match","params","id","foundUser","setFoundUser","foundMessages","setFoundMessages","emit","on","users","isSubscribed","setTimeout","findUser","returnedUser","get","data","loadPrivateMessages","_id","length","error","removeAllListeners","submitHandler","preventDefault","name","hideWhenDone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { SERVER, SERVER_URL } from './config';\nimport UsersList from './usersList'\nimport axios from 'axios'\nimport Typist from 'react-typist';\n\nconst socket = io(SERVER);\n\nfunction ChatBox(props) {\n    const [msg, setmsg] = useState(\"\");\n    const [state, setstate] = useState(\"\");\n    const [onlineUsers, setOnlineUsers] = useState([]);\n    const userId = useSelector(state => state.user_reducer.user);\n    const username = useSelector(state => state.user_reducer.username);\n    console.log(userId);\n    const readInput = (e) => {\n        setmsg(e.target.value);\n    }\n    if (props.props) {\n        var friendId = props.props.match.params.id;\n    } else {\n        friendId = props.match.params.id;\n    }\n    const [foundUser, setFoundUser] = useState({});\n    const [foundMessages, setFoundMessages] = useState([]);\n\n    // add User\n    useEffect(() => {\n        socket.emit(\"adduser\", userId, username);\n        socket.on(\"getusers\", (users) => {\n            setOnlineUsers([users]);\n        })\n    }, [userId, username])\n\n    useEffect(() => {\n        try {\n            let isSubscribed = true;\n            setTimeout(() => {\n                const findUser = async () => {\n                    if (friendId) {\n                        const returnedUser = await axios.get(`${SERVER_URL}/userinfo/${friendId}`);\n                        if (returnedUser && isSubscribed) {\n                            setFoundUser(returnedUser.data);\n                        }\n                    }\n                };\n                findUser();\n\n                const loadPrivateMessages = async () => {\n                    if (foundUser._id) {\n\n                        const foundMessages = await axios.get(\n                            `${SERVER_URL}/privateconvo?userid=${userId}&friendid=${friendId}`\n                        );\n                        if (foundMessages.data.length > 0 && isSubscribed) {\n                            setFoundMessages(foundMessages.data);\n                            // scrollToBottom();\n                        }// else {\n                        //     setMoreMessagesExist(false);\n                        // }\n                    }\n                };\n                loadPrivateMessages();\n\n                return () => (isSubscribed = false);\n            }, 100);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }, [foundUser._id, friendId, userId]);\n\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (socket) {\n                socket.emit(\"updateAndSendOnlineUsers\");\n            }\n            return () => {\n                socket.removeAllListeners()\n                socket.emit('disconnectuser', socket);\n            }\n        }, 200);\n\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log(msg)\n\n    }\n    if (userId) {\n        return (\n            <div className=\"chatContainer\">\n                <div className=\"chatContent\">\n                    <UsersList onlineUsers={onlineUsers} foundUser={foundUser} />\n                    <div className=\"rightChatContainer\">\n                        <div className=\"rightChatContent\">\n                            {\n                                foundMessages.length !== 0 ?\n                                    <>\n                                        <div className=\"left\">\n                                            <h4> <i className=\"fa fa-user-circle\"></i> Nishant Rana</h4>\n                                            <p>hello vikrant good morning!! </p>\n                                        </div>\n                                        <div className=\"right\">\n\n                                            <h4> <i className=\"fa fa-user-circle\"></i> {username}</h4>\n                                            <p value={msg}></p>\n                                        </div>\n                                    </>\n                                    :\n                                    friendId ?\n                                        <h3>Lets Start Conversation with \"<b>{foundUser.name}\"</b></h3>\n                                        :\n                                        <Typist cursor={\n                                            {\n                                                hideWhenDone: true\n                                            }\n                                        } >\n\n                                            <div className=\"typistContainer\">\n                                                <p className='chatHeadTxt'>Let's Chat </p>\n                                                <p> Let's Talk Virtual</p>\n                                                <p className='chatHeadTxt'>It's An Online live Conversation</p>\n                                                <Typist.Delay ms={1000} />\n                                            </div>\n                                        </Typist>\n                            }\n                        </div>\n                        <form onSubmit={submitHandler}>\n                            <div className=\"sendmsgForm\" >\n                                <div className=\"sendFormInner\" >\n                                    <input disabled={friendId ? false : true} autoComplete=\"off\" onChange={readInput} name=\"inputMsg\" type=\"text\" placeholder=\"Write here....\" />\n                                    <button name=\"inputMsg\" type=\"submit\"> <i className=\"fa fa-send\"></i></button>\n                                </div>\n                            </div>\n                        </form>\n                    </div >\n                </div >\n            </div >\n\n        )\n    } else {\n        //i used settimeout for not showing content immediately after re render...... during component re-render untill fetching userId this content might be visible between renders....!!\n        setTimeout(() => {\n            setstate(\"Session Expired Please LogIn Again!!!\");\n        }, 500);\n        return (\n            <div className=\"chatContainer\"><h2>{state}</h2> </div>\n        )\n    }\n}\n\nexport default ChatBox\n"]},"metadata":{},"sourceType":"module"}