{"ast":null,"code":"var _jsxFileName = \"/home/nishant007tech/chat-app/client/src/components/usersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllMessages } from './actions/user_actions';\nimport MessageTwoToneIcon from '@material-ui/icons/MessageTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersList({\n  foundUser,\n  onlineUsers\n}) {\n  _s();\n\n  let userID = useSelector(state => state.user_reducer.user);\n  const dispatch = useDispatch();\n  let msgRead = localStorage.getItem(\"MsgRead\");\n  console.log(msgRead);\n  const [users, setusers] = useState([]);\n  let [conversations, setconversations] = useState([]);\n  const username = useSelector(state => state.user_reducer.username);\n  useEffect(() => {\n    async function func() {\n      let response = await dispatch(getAllMessages());\n      let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n        if (item.receiver === userID) {\n          return item.author + \"|\" + item.authorId;\n        }\n\n        if (item.authorId === userID) {\n          return item.receiverName + \"|\" + item.receiver;\n        } else {\n          return null;\n        }\n      }))];\n      setusers(unique.map(item => item !== null && item.split(\"|\")));\n    }\n\n    func();\n  }, [dispatch, userID]); // const handleReadMsg = (userId) => {\n  //     if (msgread[0].authorId === userId) {\n  //         msgread[0].authorId = null;\n  //         msgread[0].read = true;\n  //     }\n  // }\n\n  useEffect(() => {\n    if (users.length > 0) {\n      let data = [];\n\n      for (let i = 0; i < users.length; i++) {\n        var value = users[i];\n\n        for (let j = 0; j < value.length - 1; j++) {\n          if (value !== false && value !== undefined) {\n            data.push({\n              \"userId\": value[j + 1],\n              \"username\": value[j]\n            });\n          }\n        }\n      }\n\n      if (data.length > 0) {\n        let bool = data.some(item => foundUser._id === undefined || item.userId === foundUser._id);\n\n        if (!bool) {\n          setconversations(data);\n          setconversations(prev => [...prev, {\n            \"userId\": foundUser._id,\n            \"username\": foundUser.name\n          }]);\n        } else {\n          setconversations(data);\n        }\n      }\n    }\n  }, [foundUser, users, userID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leftUsersContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"h3ForOnline\",\n      children: \"Online \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onlineUsers\",\n      children: onlineUsers.length > 0 ? onlineUsers[0].map((elem, index) => elem.userId && elem.userId !== userID ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat/${elem.userId} `,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: elem.userId === foundUser._id ? \"leftUserContent userIsActive \" : \"leftUserContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-user-circle-o userIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: elem.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: elem.socketId ? \"fa fa-circle active\" : \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }, this) : elem.userId && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftUserContent \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltiptext\",\n              children: \"Talking To Oneself Not Allowed!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-user-circle-o userIcon \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [username, \"(Me)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-circle active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"h3\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflowY\",\n        children: conversations.length > 0 ? conversations.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/chat/${item.userId} `,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleReadMsg(item.userId),\n            className: item.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-user-circle-o userIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ifNoMsg\",\n          children: [/*#__PURE__*/_jsxDEV(MessageTwoToneIcon, {\n            color: \"action\",\n            className: \"ifNoConvo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" No Message Yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Start The Conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersList, \"qu8o1xF2qNZ9kE2PUuecprER2/8=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/nishant007tech/chat-app/client/src/components/usersList.js"],"names":["React","useEffect","useState","useSelector","Link","useDispatch","getAllMessages","MessageTwoToneIcon","NotificationsActiveTwoToneIcon","UsersList","foundUser","onlineUsers","userID","state","user_reducer","user","dispatch","msgRead","localStorage","getItem","console","log","users","setusers","conversations","setconversations","username","func","response","unique","Set","payload","data","messages","flatMap","item","receiver","author","authorId","receiverName","map","split","length","i","value","j","undefined","push","bool","some","_id","userId","prev","name","elem","index","socketId","handleReadMsg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { getAllMessages } from './actions/user_actions';\nimport MessageTwoToneIcon from '@material-ui/icons/MessageTwoTone';\nimport NotificationsActiveTwoToneIcon from '@material-ui/icons/NotificationsActiveTwoTone';\n\nfunction UsersList({ foundUser, onlineUsers }) {\n    let userID = useSelector(state => state.user_reducer.user);\n    const dispatch = useDispatch();\n    let msgRead = localStorage.getItem(\"MsgRead\");\n    console.log(msgRead);\n    const [users, setusers] = useState([]);\n    let [conversations, setconversations] = useState([]);\n    const username = useSelector(state => state.user_reducer.username);\n    useEffect(() => {\n        async function func() {\n            let response = await dispatch(getAllMessages());\n            let unique = [...new Set(response.payload.data.messages.flatMap(item => {\n                if (item.receiver === userID) {\n                    return (item.author + \"|\" + item.authorId);\n                } if (item.authorId === userID) {\n                    return (item.receiverName + \"|\" + item.receiver);\n                } else {\n                    return null\n                }\n            }))];\n            setusers(unique.map(item => item !== null && item.split(\"|\")));\n        }\n        func();\n    }, [dispatch, userID])\n\n    // const handleReadMsg = (userId) => {\n    //     if (msgread[0].authorId === userId) {\n    //         msgread[0].authorId = null;\n    //         msgread[0].read = true;\n    //     }\n    // }\n    useEffect(() => {\n        if (users.length > 0) {\n            let data = [];\n            for (let i = 0; i < users.length; i++) {\n                var value = users[i];\n                for (let j = 0; j < value.length - 1; j++) {\n                    if (value !== false && value !== undefined) {\n                        data.push({ \"userId\": value[j + 1], \"username\": value[j] })\n                    }\n                }\n            }\n            if (data.length > 0) {\n                let bool = data.some(item => (\n                    foundUser._id === undefined || item.userId === foundUser._id\n                ))\n                if (!bool) {\n                    setconversations(data);\n                    setconversations(prev => [...prev, { \"userId\": foundUser._id, \"username\": foundUser.name }]);\n                } else {\n                    setconversations(data);\n                }\n            }\n\n        }\n    }, [foundUser, users, userID]);\n    return (\n        <div className=\"leftUsersContainer\">\n            <h3 id=\"h3ForOnline\">Online </h3>\n            <div className=\"onlineUsers\">\n                {\n                    onlineUsers.length > 0 ?\n                        onlineUsers[0].map((elem, index) => (\n                            elem.userId && elem.userId !== userID ?\n                                <Link key={index} to={`/chat/${elem.userId} `}>\n                                    <div className={elem.userId === foundUser._id ? \"leftUserContent userIsActive \" : \"leftUserContent\"}>\n                                        <span>\n                                            <i className=\"fa fa-user-circle-o userIcon\"></i>\n                                            <h3>{elem.username}</h3>\n                                        </span>\n                                        <i className={elem.socketId ? \"fa fa-circle active\" : \" \"}></i>\n                                    </div>\n                                </Link>\n                                :\n\n                                elem.userId && (\n                                    <Link key={index} to={`/chat`}>\n                                        <div className=\"leftUserContent \">\n                                            <span >\n                                                <span className=\"tooltiptext\">Talking To Oneself Not Allowed!!</span>\n                                                <i className=\"fa fa-user-circle-o userIcon \"></i>\n                                                <h3>{username}(Me)</h3>\n                                            </span>\n                                            <i className=\"fa fa-circle active\"></i>\n                                        </div>\n                                    </Link>\n                                ))\n                        )\n                        :\n                        \"\"\n                }\n            </div>\n            <div>\n                <h3 id=\"h3\">Chats</h3>\n                <div className=\"overflowY\">\n                    {\n                        conversations.length > 0 ?\n                            conversations.map((item, index) => (\n                                <Link key={index} to={`/chat/${item.userId} `}>\n                                    <div onClick={() => handleReadMsg(item.userId)} className={item.userId === foundUser._id ? \"leftUserContent userIsActive\" : \"leftUserContent\"}>\n                                        <span>\n                                            <i className=\"fa fa-user-circle-o userIcon\"></i>\n                                            <h3>{item.username}</h3>\n                                        </span>\n                                        {/* {\n                                            msgread[0].authorId === item.userId ?\n                                                <NotificationsActiveTwoToneIcon color=\"action\" className=\"notiIcon\" />\n                                                :\n                                                \"\"\n                                        } */}\n                                    </div>\n                                </Link>\n                            ))\n                            :\n                            <div className=\"ifNoMsg\">\n                                <MessageTwoToneIcon color=\"action\" className=\"ifNoConvo\" />\n                                <p> No Message Yet!</p>\n                                <i>Start The Conversation!</i>\n                            </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}